apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysite
  labels:
    app: mysite
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysite
  template:
    metadata:
      labels:
        app: mysite
    spec:
      containers:
      - name: my-site
        image: shlomi99/fabric:kube
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: mysite-service
spec:
  selector:
    app: mysite
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: second-mysite
  labels:
    app: second-mysite
spec:
  replicas: 1
  selector:
    matchLabels:
      app: second-mysite
  template:
    metadata:
      labels:
        app: second-mysite
    spec:
      containers:
      - name: second-mysite
        image: shlomi99/fabric:kube
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: second-mysite-service
spec:
  selector:
    app: second-mysite
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: mysite-ingress
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`example.com`)
    kind: Rule
    services:
    - name: mysite-service
      port: 80
    - name: second-mysite-service
      port: 80    
  - match: Host(`example.com/example`)
    kind: Rule
    services:
    - name: mysite-service
      port: 80
    - name: second-mysite-service
      port: 80  
    tls:
  secretName: cerficate-secret-tls    
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-info
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---  
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-info
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: pods-list
  apiGroup: rbac.authorization.k8s.io





# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: kube-json-deployment
#   namespace: fabric
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: kube-json
#   template:
#     metadata:
#       labels:
#         app: kube-json
#     spec:
#       containers:
#         - name: kube-json
#           image: shlomi99/fabric:kube
#           resources:
#             requests:
#               memory: "64Mi"
#               cpu: "100m"
#             limits:
#               memory: "128Mi"
#               cpu: "500m"
#           ports:
#           - containerPort: 8080
#           imagePullPolicy: Always
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: kube-json-service
#   namespace: fabric
# spec:
#   ports:
#   - port: 80
#     targetPort: 8080
#     name: tcp
#   selector:
#     app: kube-json
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: kube-json-ingress
#   namespace: fabric
#   annotations:
#     kubernetes.io/ingress.class: "traefik"
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: kube-json-service
#             port:
#               number: 80