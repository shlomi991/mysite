apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysite-nginx
  labels:
    app: mysite-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysite-nginx
  template:
    metadata:
      labels:
        app: mysite-nginx
    spec:
      containers:
      - name: nginx
        image: shlomi99/fabric:shlo
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: mysite-nginx-service
spec:
  selector:
    app: mysite-nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: mysite-nginx-ingress
spec:
  entryPoints:
    - web
  routes:
  - match: Path(`/`)
    kind: Rule
    services:
    - name: mysite-nginx-service
      port: 80
  - match: Path(`/example`)
    kind: Rule
    services:
    - name: mysite-nginx-service
      port: 80    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: second-mysite-nginx
  labels:
    app: second-mysite-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: second-mysite-nginx
  template:
    metadata:
      labels:
        app: second-mysite-nginx
    spec:
      containers:
      - name: second-nginx
        image: shlomi99/fabric:shlo
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: second-mysite-nginx-service
spec:
  selector:
    app: second-mysite-nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: mysite-nginx-ingress
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`example.com`)
    kind: Rule
    services:
    - name: mysite-nginx-service
      port: 80
  - match: Host(`example.com/examle`)
    kind: Rule
    services:
    - name: mysite-nginx-service
      port: 80
  - match: Path(`/b`)
    kind: Rule
    services:
    - name: second-mysite-nginx-service
      port: 80
  - match: Path(`/b/example`)
    kind: Rule
    services:
    - name: second-mysite-nginx-service
      port: 80
  tls:
    secretName: cerficate-secret-tls
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]      
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: pods-list
  apiGroup: rbac.authorization.k8s.io 
                           